/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    id 'com.github.johnrengelman.shadow' version '5.1.0'

    id 'nu.studer.jooq' version '3.0.3'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
         url "https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc"
         url 'https://plugins.gradle.org/m2/'
         url "http://maven.cubrid.org/"
    }
    mavenCentral()
    mavenLocal()
}

version = "3.8.3"
ext {
    vertxVersion = "3.8.3"
    junitJupiterEngineVersion = "5.4.0"
    jooqVersion = "3.12.3"
}
sourceCompatibility = "1.8"

jooq {
  version = "3.12.3"
  edition = "OSS"
}

dependencies {
    implementation "io.vertx:vertx-core:$version"
    implementation "io.vertx:vertx-web:$version"
    implementation "io.vertx:vertx-web-api-contract:$version"
    implementation "io.vertx:vertx-rx-java:$version"
    implementation "com.github.davidmoten:rxjava2-jdbc:0.2.5"
    implementation "org.slf4j:slf4j-jcl:1.7.28"
    implementation "org.postgresql:postgresql:42.2.8"
    implementation group:"org.xerial", name:"sqlite-jdbc", version:"3.28.0"
    implementation "org.jooq:jooq"
    implementation group: 'cubrid', name: 'cubrid-jdbc', version: '10.1.3.7765'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.5.2'

    // This dependency is used by the application.
    implementation "com.google.guava:guava:28.0-jre"

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
    testCompile "junit:junit:4.12"
}

application {
    // Define the main class for the application
    mainClassName = "io.vertx.core.Launcher"
}


def mainVerticleName = "dmo.fs.vertx.Server"
def doOnChange = ".${File.separator}gradlew classes"
def watchForChange = 'src/**/*.java'

apply plugin: 'nu.studer.jooq'

run {
    environment "VERTXWEB_ENVIRONMENT", "dev"
    args = ['run', mainVerticleName, "--java-optsX=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005", "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange", "--conf=src/main/java/application-conf.json"]
    systemProperty("java.util.logging.config.file", "src/main/java/vertx-default-jul-logging.properties")
}

shadowJar {
  classifier = ''

  manifest {
      attributes "Main-Verticle": mainVerticleName 
  }

  mergeServiceFiles {
    include "META-INF/services/io.vertx.core.spi.VerticleFactory"
  }
}

test {
    // Use junit platform for unit tests
    environment "VERTXWEB_ENVIRONMENT", "dev"
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}
