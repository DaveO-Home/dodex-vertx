#!/usr/bin/bash
#####
# It appears the all graalvm dependencies are resolved from the location of native-image.
# So you can build the executable from the vertx directory. 
# Run "gradlew shadowJar" first
#####

~/installs/graalvm-ce-java8-21.1.0/bin/native-image io.vertx.core.Launcher -jar ./build/libs/dodex-vertx-4.1.2.jar  -cp ./build/classes/java/main --initialize-at-build-time=org.slf4j,org.apache.commons.logging --allow-incomplete-classpath --initialize-at-run-time=io.netty.handler.ssl.ConscryptAlpnSslEngine --initialize-at-run-time=org.conscrypt.Conscrypt -H:+ReportExceptionStackTraces --trace-class-initialization=org.conscrypt.Conscrypt  --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslContext --initialize-at-run-time=io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator --initialize-at-run-time=io.netty.handler.ssl.OpenSslSessionContext --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslEngine --initialize-at-run-time=io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator --initialize-at-run-time=io.netty.handler.ssl.Conscrypt --initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger --initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils --initialize-at-run-time=io.netty.handler.ssl.JettyNpnSslEngine --initialize-at-run-time=io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine  --initialize-at-run-time=io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine
