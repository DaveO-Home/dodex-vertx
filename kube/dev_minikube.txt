---- Some commands used to build a functional vert.x app exposed to the internet via loophole

---- docker image build
docker rm dodex_vertx  -- if created
docker rmi dufferdo2/dodex-vertx
gradlew shadowJar
rm kube/dodex-vertx-4.0.0-prod.jar
mv build/libs/dodex-vertx-4.0.0-prod.jar ./kube/
sudo docker build  -t dufferdo2/dodex-vertx:latest -f kube/Dockerfile ./kube

---- minikube
./deleteapp
minikube image remove dufferdo2/dodex-vertx
minikube image load dufferdo2/dodex-vertx
kubectl create -f kube/vertx.yml
kubectl get pods -A

---- change "dv" to your two desired characters
loophole http 30080 $(minikube service vertx-service --url | cut -d":" -f2 | cut -d"/" -f3) --hostname dvhandicap

loophole http 30070 $(minikube service vertx-service --url | cut -d":" -f2 | cut -d"/" -f3) --hostname dvhandicap2

---- logins
docker exec -it <container>
docker run --rm -it --entrypoint /bin/bash dufferdo2/dodex-vertx

--- others
ip addr show   # in minikube ssh
nc -zv 192.168.49.1 3306   ----  this ip is my bridge ip, the bridge ip should be used to access databases running on the host
